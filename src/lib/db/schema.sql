CREATE TYPE figma_edit_access_status AS ENUM (
  'pending',
  'accepted',
  'declined'
);

CREATE TABLE figma_users (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    username VARCHAR(255) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255),
    google_id TEXT UNIQUE,
    github_id TEXT UNIQUE,
    verified BOOLEAN NOT NULL DEFAULT FALSE,
    picture TEXT,
    CONSTRAINT auth_method_check CHECK (password_hash IS NOT NULL OR google_id IS NOT NULL OR github_id IS NOT NULL)
);

CREATE TABLE figma_sessions (
    id TEXT PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES figma_users(id) ON DELETE CASCADE,
    expires_at TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE figma_email_verification_request (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id INTEGER NOT NULL REFERENCES figma_users(id) ON DELETE CASCADE,
    email TEXT NOT NULL,
    code TEXT NOT NULL,
    expires_at TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE figma_rooms (
    id VARCHAR PRIMARY KEY,
    owner_id INTEGER NOT NULL REFERENCES figma_users(id) ON DELETE RESTRICT
);

CREATE TABLE figma_edit_access (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    requester_id INTEGER NOT NULL REFERENCES figma_users(id) ON DELETE CASCADE,
    room_id_requested_for VARCHAR NOT NULL REFERENCES figma_rooms(id) ON DELETE CASCADE,
    status figma_edit_access_status NOT NULL
);

CREATE INDEX figma_users_google_id_idx ON figma_users (google_id);
CREATE INDEX figma_users_github_id_idx ON figma_users (github_id);
CREATE INDEX figma_sessions_user_id_idx ON figma_sessions (user_id);
CREATE INDEX figma_email_verification_requests_user_id_code_idx ON figma_email_verification_request (user_id, code);
CREATE INDEX figma_rooms_owner_id_idx ON figma_rooms (owner_id);
CREATE INDEX figma_edit_access_requester_id_status_idx ON figma_edit_access (requester_id, status);
CREATE INDEX figma_edit_access_room_id_idx ON figma_edit_access (room_id_requested_for);
